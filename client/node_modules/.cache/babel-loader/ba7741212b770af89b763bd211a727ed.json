{"ast":null,"code":"import _slicedToArray from \"/Users/jacobehrlich/Desktop/Raptor_Maps_Challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/jacobehrlich/Desktop/Raptor_Maps_Challenge/client/src/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar fetch = require('node-fetch');\n\nmapboxgl.workerClass = MapboxWorker;\nmapboxgl.accessToken = \"pk.eyJ1IjoiZWhybGljaGoiLCJhIjoiY2ttdXNnNmh4MG1kajJ2cWVmbzBoZDZldSJ9.0ffP7axpAqza9qSwgm4vaA\";\n\nvar Map = function Map() {\n  _s();\n\n  var mapContainer = useRef();\n\n  var _useState = useState(-70.9),\n      _useState2 = _slicedToArray(_useState, 2),\n      lng = _useState2[0],\n      setLng = _useState2[1];\n\n  var _useState3 = useState(42.35),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lat = _useState4[0],\n      setLat = _useState4[1];\n\n  var _useState5 = useState(9),\n      _useState6 = _slicedToArray(_useState5, 2),\n      zoom = _useState6[0],\n      setZoom = _useState6[1];\n\n  useEffect(function () {\n    var map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    map.on('load', function () {\n      map.addSource('technician-location', {\n        type: 'geojson',\n        data: {\n          type: 'FeatureCollection',\n          features: []\n        }\n      });\n      map.addLayer({\n        id: 'technician-location',\n        source: 'technician-location',\n        type: 'symbol',\n        layout: {\n          'icon-image': map.addImage('backery-15'),\n          'icon-padding': 0,\n          'icon-allow-overlap': true\n        }\n      }); //let url = \"http://localhost:5000/api/v1/solar_farms/0/technicians\";\n      //console.log(url);\n\n      fetch(\"http://localhost:5000/api/v1/solar_farms/0/technicians\").then(function (res) {\n        return res.json().then(function (data) {\n          return {\n            status: res.status,\n            body: data\n          };\n        });\n      }).then(function (obj) {\n        return obj.body.features[0];\n      })\n      /*.then(obj => {\n          //var data = obj.body.features;\n          console.log(obj.body.features[0])\n          console.log(obj.status);\n          map.getSource('technician-location').setData(obj.body.features[0])\n      })*/\n      .then(function (geoData) {\n        map.getSource('technician-location').setData(geoData);\n        map.flyTo({\n          center: geoData.geometry.coordinates,\n          speed: 0.5\n        });\n      }).catch(function (err) {\n        return console.log(\"Error: \", err);\n      });\n    });\n    map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n    map.on('move', function () {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n    return function () {\n      return map.remove();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      ref: mapContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Map, \"jxl7/+YA+x64Fpng+OmHZvqYDeM=\");\n\n_c = Map;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 84,\n  columnNumber: 17\n}, this), document.getElementById('app'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/jacobehrlich/Desktop/Raptor_Maps_Challenge/client/src/index.js"],"names":["React","useRef","useEffect","useState","ReactDOM","mapboxgl","MapboxWorker","fetch","require","workerClass","accessToken","Map","mapContainer","lng","setLng","lat","setLat","zoom","setZoom","map","container","current","style","center","on","addSource","type","data","features","addLayer","id","source","layout","addImage","then","res","json","status","body","obj","geoData","getSource","setData","flyTo","geometry","coordinates","speed","catch","err","console","log","addControl","NavigationControl","getCenter","toFixed","getZoom","remove","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp'\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker'\n\nconst fetch = require('node-fetch');\nmapboxgl.workerClass = MapboxWorker\nmapboxgl.accessToken = \"pk.eyJ1IjoiZWhybGljaGoiLCJhIjoiY2ttdXNnNmh4MG1kajJ2cWVmbzBoZDZldSJ9.0ffP7axpAqza9qSwgm4vaA\"\n\nconst Map = () => {\n    const mapContainer = useRef();\n    \n    const[lng,setLng] = useState(-70.9)\n    const[lat,setLat] = useState(42.35)\n    const[zoom, setZoom] = useState(9)\n\n    useEffect(() =>{\n        const map = new mapboxgl.Map({\n            container : mapContainer.current,\n            style : 'mapbox://styles/mapbox/streets-v11',\n            center : [lng, lat],\n            zoom: zoom\n        });\n        map.on('load', () => {\n            map.addSource('technician-location',{\n                type: 'geojson',\n                data: {\n                    type: 'FeatureCollection',\n                    features: [],\n                },\n            });\n\n            map.addLayer({\n                id: 'technician-location',\n                source: 'technician-location',\n                type: 'symbol',\n                layout: {\n                    'icon-image' : map.addImage('backery-15'),\n                    'icon-padding' : 0,\n                    'icon-allow-overlap' : true, \n                },\n            });\n            //let url = \"http://localhost:5000/api/v1/solar_farms/0/technicians\";\n            //console.log(url);\n            fetch(\"http://localhost:5000/api/v1/solar_farms/0/technicians\")\n                .then(res => res.json().then(data => ({status: res.status, body: data})))\n                .then(obj => obj.body.features[0])\n                /*.then(obj => {\n                    //var data = obj.body.features;\n                    console.log(obj.body.features[0])\n                    console.log(obj.status);\n                    map.getSource('technician-location').setData(obj.body.features[0])\n                })*/\n                .then(geoData => {\n                    map.getSource('technician-location').setData(geoData)\n                    map.flyTo({\n                        center: geoData.geometry.coordinates,\n                        speed:  0.5\n                    })\n                })\n                .catch(err => console.log(\"Error: \", err))\n        });\n\n\n        map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n        map.on('move', () =>{\n            setLng(map.getCenter().lng.toFixed(4));\n            setLat(map.getCenter().lat.toFixed(4));\n            setZoom(map.getZoom().toFixed(2));\n        });\n        return () => map.remove();\n    }, []);\n\n    return(\n        <div>\n            <div className =\"sidebar\">\n                Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n            </div>\n            <div className=\"map-container\" ref={mapContainer} />\n        </div>\n    );\n}\nReactDOM.render(<Map />, document.getElementById('app'));"]},"metadata":{},"sourceType":"module"}