{"ast":null,"code":"import _slicedToArray from \"/Users/jacobehrlich/Desktop/Raptor_Maps_Challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/jacobehrlich/Desktop/Raptor_Maps_Challenge/client/src/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar fetch = require('node-fetch');\n\nmapboxgl.workerClass = MapboxWorker;\nmapboxgl.accessToken = \"pk.eyJ1IjoiZWhybGljaGoiLCJhIjoiY2ttdXNnNmh4MG1kajJ2cWVmbzBoZDZldSJ9.0ffP7axpAqza9qSwgm4vaA\";\n\nvar Map = function Map() {\n  _s();\n\n  var mapContainer = useRef();\n\n  var _useState = useState(-70.9),\n      _useState2 = _slicedToArray(_useState, 2),\n      lng = _useState2[0],\n      setLng = _useState2[1];\n\n  var _useState3 = useState(42.35),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lat = _useState4[0],\n      setLat = _useState4[1];\n\n  var _useState5 = useState(12),\n      _useState6 = _slicedToArray(_useState5, 2),\n      zoom = _useState6[0],\n      setZoom = _useState6[1];\n\n  var current_markers = [];\n  useEffect(function () {\n    var map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    map.on('load', function () {\n      var site_id = 0;\n      var fetch_Requests = setInterval(function getTechnicianData() {\n        var url = \"http://localhost:5000/api/v1/solar_farms/\" + site_id + \"/technicians\"; //fetch(\"http://localhost:5000/api/v1/solar_farms/0/technicians\")\n\n        fetch(url).then(function (res) {\n          return console.log(res);\n        }) //.then(res => res.json().then(data => ({status: res.status, body: data})))\n        //.then(obj => obj.body)\n        //.then(geoData => {\n        //console.log(geoData);\n\n        /*let technicians_center = [0,0]\n        if(geoData != \"Invalid Site ID\"){\n            \n            while(current_markers.length > 0){\n                let marker_to_remove = current_markers.pop()\n                marker_to_remove.remove();\n            }\n            for(var i = 0; i<geoData.length; i++){\n                let marker = new mapboxgl.Marker({\n                    offset: [-120, 0],\n                    rotation: geoData[i].properties.bearing\n                }).setLngLat(geoData[i].geometry.coordinates).addTo(map);\n                     current_markers.push(marker)\n                     technicians_center[0] += geoData[i].geometry.coordinates[0]\n                technicians_center[1] += geoData[i].geometry.coordinates[1]\n            }\n                 technicians_center[0] /= geoData.length\n            technicians_center[1] /= geoData.length\n                 console.log(technicians_center)\n            map.flyTo({\n                //center: geoData[0].geometry.coordinates,\n                center: technicians_center,\n                speed:  0.5,\n                zoom: 12\n            }) \n        }*/\n\n        /*while(current_markers.length > 0){\n            let marker_to_remove = current_markers.pop()\n            marker_to_remove.remove();\n        }\n        for(var i = 0; i<geoData.length; i++){\n            let marker = new mapboxgl.Marker({\n                offset: [-120, 0],\n                rotation: geoData[i].properties.bearing\n            }).setLngLat(geoData[i].geometry.coordinates).addTo(map);\n             current_markers.push(marker)\n             technicians_center[0] += geoData[i].geometry.coordinates[0]\n            technicians_center[1] += geoData[i].geometry.coordinates[1]\n        }\n         technicians_center[0] /= geoData.length\n        technicians_center[1] /= geoData.length\n         console.log(technicians_center)\n        map.flyTo({\n            //center: geoData[0].geometry.coordinates,\n            center: technicians_center,\n            speed:  0.5\n        })*/\n        //})\n        .catch(function (err) {\n          return console.log(\"Error: \", err);\n        });\n        site_id += 1;\n      }, 10000);\n      /*let url = \"http://localhost:5000/api/v1/solar_farms/\" + site_id + \"/technicians\";\n      //fetch(\"http://localhost:5000/api/v1/solar_farms/0/technicians\")\n      fetch(url)\n          .then(res => res.json().then(data => ({status: res.status, body: data})))\n          .then(obj => obj.body.features)\n          .then(geoData => {\n              console.log(geoData);\n              let technicians_center = [0,0]\n              for(var i = 0; i<geoData.length; i++){\n                  let marker = new mapboxgl.Marker({\n                      offset: [-120, 0],\n                      rotation: geoData[i].properties.bearing\n                  }).setLngLat(geoData[i].geometry.coordinates).addTo(map);\n                   technicians_center[0] += geoData[i].geometry.coordinates[0]\n                  technicians_center[1] += geoData[i].geometry.coordinates[1]\n              }\n               technicians_center[0] /= geoData.length\n              technicians_center[1] /= geoData.length\n               console.log(technicians_center)\n              map.flyTo({\n                  //center: geoData[0].geometry.coordinates,\n                  center: technicians_center,\n                  speed:  0.5\n              })\n          })\n          .catch(err => console.log(\"Error: \", err))*/\n    });\n    map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n    map.on('move', function () {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n    return function () {\n      return map.remove();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      ref: mapContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Map, \"IMV7utQHN0RjXHrQwgmDLPeJJvo=\");\n\n_c = Map;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 148,\n  columnNumber: 17\n}, this), document.getElementById('app'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/jacobehrlich/Desktop/Raptor_Maps_Challenge/client/src/index.js"],"names":["React","useRef","useEffect","useState","ReactDOM","mapboxgl","MapboxWorker","fetch","require","workerClass","accessToken","Map","mapContainer","lng","setLng","lat","setLat","zoom","setZoom","current_markers","map","container","current","style","center","on","site_id","fetch_Requests","setInterval","getTechnicianData","url","then","res","console","log","catch","err","addControl","NavigationControl","getCenter","toFixed","getZoom","remove","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp'\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker'\n\nconst fetch = require('node-fetch');\nmapboxgl.workerClass = MapboxWorker\nmapboxgl.accessToken = \"pk.eyJ1IjoiZWhybGljaGoiLCJhIjoiY2ttdXNnNmh4MG1kajJ2cWVmbzBoZDZldSJ9.0ffP7axpAqza9qSwgm4vaA\"\n\nconst Map = () => {\n    const mapContainer = useRef();\n    \n    const[lng,setLng] = useState(-70.9)\n    const[lat,setLat] = useState(42.35)\n    const[zoom, setZoom] = useState(12)\n    var current_markers = []\n\n    useEffect(() =>{\n        const map = new mapboxgl.Map({\n            container : mapContainer.current,\n            style : 'mapbox://styles/mapbox/streets-v11',\n            center : [lng, lat],\n            zoom: zoom\n        });\n        map.on('load', () => {\n            let site_id = 0\n            \n            var fetch_Requests = setInterval(function getTechnicianData(){\n\n            let url = \"http://localhost:5000/api/v1/solar_farms/\" + site_id + \"/technicians\";\n            //fetch(\"http://localhost:5000/api/v1/solar_farms/0/technicians\")\n            fetch(url)\n                .then(res => console.log(res))\n                //.then(res => res.json().then(data => ({status: res.status, body: data})))\n                //.then(obj => obj.body)\n                //.then(geoData => {\n                    //console.log(geoData);\n                    /*let technicians_center = [0,0]\n                    if(geoData != \"Invalid Site ID\"){\n                        \n                        while(current_markers.length > 0){\n                            let marker_to_remove = current_markers.pop()\n                            marker_to_remove.remove();\n                        }\n                        for(var i = 0; i<geoData.length; i++){\n                            let marker = new mapboxgl.Marker({\n                                offset: [-120, 0],\n                                rotation: geoData[i].properties.bearing\n                            }).setLngLat(geoData[i].geometry.coordinates).addTo(map);\n    \n                            current_markers.push(marker)\n    \n                            technicians_center[0] += geoData[i].geometry.coordinates[0]\n                            technicians_center[1] += geoData[i].geometry.coordinates[1]\n                        }\n    \n                        technicians_center[0] /= geoData.length\n                        technicians_center[1] /= geoData.length\n    \n                        console.log(technicians_center)\n                        map.flyTo({\n                            //center: geoData[0].geometry.coordinates,\n                            center: technicians_center,\n                            speed:  0.5,\n                            zoom: 12\n                        }) \n                    }*/\n                    /*while(current_markers.length > 0){\n                        let marker_to_remove = current_markers.pop()\n                        marker_to_remove.remove();\n                    }\n                    for(var i = 0; i<geoData.length; i++){\n                        let marker = new mapboxgl.Marker({\n                            offset: [-120, 0],\n                            rotation: geoData[i].properties.bearing\n                        }).setLngLat(geoData[i].geometry.coordinates).addTo(map);\n\n                        current_markers.push(marker)\n\n                        technicians_center[0] += geoData[i].geometry.coordinates[0]\n                        technicians_center[1] += geoData[i].geometry.coordinates[1]\n                    }\n\n                    technicians_center[0] /= geoData.length\n                    technicians_center[1] /= geoData.length\n\n                    console.log(technicians_center)\n                    map.flyTo({\n                        //center: geoData[0].geometry.coordinates,\n                        center: technicians_center,\n                        speed:  0.5\n                    })*/\n                //})\n                .catch(err => console.log(\"Error: \", err))\n                site_id += 1;\n            }, 10000)\n            /*let url = \"http://localhost:5000/api/v1/solar_farms/\" + site_id + \"/technicians\";\n            //fetch(\"http://localhost:5000/api/v1/solar_farms/0/technicians\")\n            fetch(url)\n                .then(res => res.json().then(data => ({status: res.status, body: data})))\n                .then(obj => obj.body.features)\n                .then(geoData => {\n                    console.log(geoData);\n                    let technicians_center = [0,0]\n                    for(var i = 0; i<geoData.length; i++){\n                        let marker = new mapboxgl.Marker({\n                            offset: [-120, 0],\n                            rotation: geoData[i].properties.bearing\n                        }).setLngLat(geoData[i].geometry.coordinates).addTo(map);\n\n                        technicians_center[0] += geoData[i].geometry.coordinates[0]\n                        technicians_center[1] += geoData[i].geometry.coordinates[1]\n                    }\n\n                    technicians_center[0] /= geoData.length\n                    technicians_center[1] /= geoData.length\n\n                    console.log(technicians_center)\n                    map.flyTo({\n                        //center: geoData[0].geometry.coordinates,\n                        center: technicians_center,\n                        speed:  0.5\n                    })\n                })\n                .catch(err => console.log(\"Error: \", err))*/\n        });\n\n\n        map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n        map.on('move', () =>{\n            setLng(map.getCenter().lng.toFixed(4));\n            setLat(map.getCenter().lat.toFixed(4));\n            setZoom(map.getZoom().toFixed(2));\n        });\n        return () => map.remove();\n    }, []);\n\n    return(\n        <div>\n            <div className =\"sidebar\">\n                Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n            </div>\n            <div className=\"map-container\" ref={mapContainer} />\n        </div>\n    );\n}\nReactDOM.render(<Map />, document.getElementById('app'));"]},"metadata":{},"sourceType":"module"}